AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  VpcId:
    Description: VPC identifier
    Type: String
  VpcCidr:
    Description: VPC Range IP
    Type: String
  Subnet:
    Type: AWS::EC2::Subnet::Id
    Description: Public Subnet
  KeyPair:
    Type: String
    Description: Knime Instance Key name
  BastionSecurityGroupId:
    Type: String
  BaseDomain:
    Type: String
  EsNodeHost:
    Type: String
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.micro

Mappings:
  AmiId:
    "us-east-1":
      "HVM64": ami-0bb273345f0961e90
    "us-east-2":
      "HVM64": ami-0b9412c869f55216b
    "us-west-1":
      "HVM64": ami-0b8ca4b7493b969fb
    "us-west-2":
      "HVM64": ami-0794df61693647a62
    "af-south-1":
      "HVM64": ami-0dbee4f4cc733dd85
    "ap-east-1":
      "HVM64": ami-0747b7a1291b23342
    "ap-southeast-3":
      "HVM64": ami-052087d6039b1f636
    "ap-south-1":
      "HVM64": ami-0da7defaf4c4b50ce
    "ap-northeast-1":
      "HVM64": ami-0f519b7a14dde593c
    "ap-northeast-2":
      "HVM64": ami-0558e36b239113dcb
    "ap-northeast-3":
      "HVM64": ami-09ce8fd7d2dca9a34
    "ap-southeast-1":
      "HVM64": ami-00efd500963d83017
    "ap-southeast-2":
      "HVM64": ami-0408190b11a73de67
    "ca-central-1":
      "HVM64": ami-05d9a9c9ea29dfb5a
    "eu-central-1":
      "HVM64": ami-0165971292603e43d
    "eu-west-1":
      "HVM64": ami-034153729211d5d49
    "eu-west-2":
      "HVM64": ami-03dcd3376643be0b2
    "eu-west-3":
      "HVM64": ami-0b9514df9ecc6e210
    "eu-south-1":
      "HVM64": ami-056a2d6cbc9c5a3e8
    "eu-north-1":
      "HVM64": ami-058f2db68c5f857f2
    "me-south-1":
      "HVM64": ami-04b82fb7ed8469180
    "sa-east-1":
      "HVM64": ami-0ea38f2e9aeeefb18

Resources:
  EsKibanaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Elastic Kibana Security Group"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: !Ref VpcCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  Xface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref Subnet
      Description: Interface for public access
      GroupSet:
        - !Ref EsKibanaSecurityGroup
        - !Ref BastionSecurityGroupId
      SourceDestCheck: false

  KibanaEsInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPair
      ImageId: !FindInMap [AmiId, !Ref AWS::Region, HVM64]
      NetworkInterfaces:
        - DeviceIndex: 0
          GroupSet:
            - !Ref EsKibanaSecurityGroup
            - !Ref BastionSecurityGroupId
          SubnetId: !Ref Subnet
      Tags:
        - Key: Name
          Value: !Sub "kibana.${BaseDomain}"
      UserData:
        "Fn::Base64":
          !Sub |
          #!/bin/bash -xe

          service ecs.service stop
          mkdir -p /etc/kibana/

          cat <<EOT >> /etc/kibana/kibana.yml
          elasticsearch:
            hosts: ["${EsNodeHost}"]
          server:
            host: 0.0.0.0
            port: 8080
            ssl:
              enabled: false
            publicBaseUrl: https://kibana.${BaseDomain}
          EOT

          # start kibana
          docker run -d --restart always --name kibana -v /etc/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml -p 8080:8080 docker.elastic.co/kibana/kibana:8.1.0
